struct start main
function start fibonacci
int 4 _fibonacci_0 
param start
int 4 n_1 
param end
int 4 n_1 0 
int 4 _t1_1 0 
bool 1 _t2_1 0 
int 4 _t3_2 0 
int 4 _t4_1 0 
bool 1 _t5_1 0 
int 4 _t6_3 0 
int 4 _t7_1 0 
bool 1 _t8_1 0 
int 4 _t9_4 0 
int 4 _t10_1 0 
int 4 _t11_1 0 
int 4 _t12_1 0 
int 4 _t13_1 0 
int 4 _t14_1 0 
int 4 _t15_1 0 
int 4 _t16_1 0 
function end
function start main
void 0 _main_0 
param start
param end
int 4 n_5 0 
int 4 _t17_5 0 
int 4 res_5 0 
function end
struct end
code starts
funCall main.main
call label12
exit
label1:
function start main.fibonacci
_t1_1 =i #0
if ( n_1 <=i _t1_1 ) goto label2
_t2_1 =b #false
goto label3
label2:
_t2_1 =b #true
label3:
if ( _t2_1 !=b #true ) goto label4
_t3_2 =i #0
return _t3_2
goto label5
label4:
_t4_1 =i #1
if ( n_1 ==i _t4_1 ) goto label6
_t5_1 =b #false
goto label7
label6:
_t5_1 =b #true
label7:
if ( _t5_1 !=b #true ) goto label8
_t6_3 =i #1
return _t6_3
goto label5
label8:
_t7_1 =i #2
if ( n_1 ==i _t7_1 ) goto label9
_t8_1 =b #false
goto label10
label9:
_t8_1 =b #true
label10:
if ( _t8_1 !=b #true ) goto label11
_t9_4 =i #1
return _t9_4
goto label5
label11:
label5:
funCall main.fibonacci
_t10_1 =i #1
_t11_1 =i n_1 -i _t10_1
param _t11_1
call label1
_t12_1 = returnVal
funCall main.fibonacci
_t13_1 =i #2
_t14_1 =i n_1 -i _t13_1
param _t14_1
call label1
_t15_1 = returnVal
_t16_1 =i _t12_1 +i _t15_1
return _t16_1
return
function end main.fibonacci
label12:
function start main.main
funCall main.fibonacci
param n_5
call label1
_t17_5 = returnVal
res_5 =i _t17_5
print int res_5
print newline
return
function end main.main
